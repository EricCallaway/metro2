/*
METRO2 API

Moov Metro2 ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing and validating Metro2 files. Metro2 is an open-source consumer credit history report for credit report file creation and validation.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the K2Segment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &K2Segment{}

// K2Segment struct for K2Segment
type K2Segment struct {
	SegmentIdentifier  string `json:"segmentIdentifier"`
	PurchasedIndicator int32  `json:"purchasedIndicator"`
	PurchasedName      string `json:"purchasedName"`
}

// NewK2Segment instantiates a new K2Segment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewK2Segment(segmentIdentifier string, purchasedIndicator int32, purchasedName string) *K2Segment {
	this := K2Segment{}
	this.SegmentIdentifier = segmentIdentifier
	this.PurchasedIndicator = purchasedIndicator
	this.PurchasedName = purchasedName
	return &this
}

// NewK2SegmentWithDefaults instantiates a new K2Segment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewK2SegmentWithDefaults() *K2Segment {
	this := K2Segment{}
	return &this
}

// GetSegmentIdentifier returns the SegmentIdentifier field value
func (o *K2Segment) GetSegmentIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentIdentifier
}

// GetSegmentIdentifierOk returns a tuple with the SegmentIdentifier field value
// and a boolean to check if the value has been set.
func (o *K2Segment) GetSegmentIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentIdentifier, true
}

// SetSegmentIdentifier sets field value
func (o *K2Segment) SetSegmentIdentifier(v string) {
	o.SegmentIdentifier = v
}

// GetPurchasedIndicator returns the PurchasedIndicator field value
func (o *K2Segment) GetPurchasedIndicator() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PurchasedIndicator
}

// GetPurchasedIndicatorOk returns a tuple with the PurchasedIndicator field value
// and a boolean to check if the value has been set.
func (o *K2Segment) GetPurchasedIndicatorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchasedIndicator, true
}

// SetPurchasedIndicator sets field value
func (o *K2Segment) SetPurchasedIndicator(v int32) {
	o.PurchasedIndicator = v
}

// GetPurchasedName returns the PurchasedName field value
func (o *K2Segment) GetPurchasedName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PurchasedName
}

// GetPurchasedNameOk returns a tuple with the PurchasedName field value
// and a boolean to check if the value has been set.
func (o *K2Segment) GetPurchasedNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchasedName, true
}

// SetPurchasedName sets field value
func (o *K2Segment) SetPurchasedName(v string) {
	o.PurchasedName = v
}

func (o K2Segment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o K2Segment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["segmentIdentifier"] = o.SegmentIdentifier
	toSerialize["purchasedIndicator"] = o.PurchasedIndicator
	toSerialize["purchasedName"] = o.PurchasedName
	return toSerialize, nil
}

type NullableK2Segment struct {
	value *K2Segment
	isSet bool
}

func (v NullableK2Segment) Get() *K2Segment {
	return v.value
}

func (v *NullableK2Segment) Set(val *K2Segment) {
	v.value = val
	v.isSet = true
}

func (v NullableK2Segment) IsSet() bool {
	return v.isSet
}

func (v *NullableK2Segment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableK2Segment(val *K2Segment) *NullableK2Segment {
	return &NullableK2Segment{value: val, isSet: true}
}

func (v NullableK2Segment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableK2Segment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
